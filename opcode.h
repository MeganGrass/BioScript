#pragma once

ULONG Bio_Hazard_2_Script_Bytecode_Size[0x8F] = {
	{ sizeof(tagBio2Bytecode::tagNop) },				// Nop
	{ sizeof(tagBio2Bytecode::tagEvt_end) },			// Evt_end
	{ sizeof(tagBio2Bytecode::tagEvt_next) },			// Evt_next
	{ sizeof(tagBio2Bytecode::tagEvt_chain) },			// Evt_chain
	{ sizeof(tagBio2Bytecode::tagEvt_exec) },			// Evt_exec
	{ sizeof(tagBio2Bytecode::tagEvt_kill) },			// Evt_kill
	{ sizeof(tagBio2Bytecode::tagIfel_ck) },			// Ifel_ck
	{ sizeof(tagBio2Bytecode::tagElse_ck) },			// Else_ck
	{ sizeof(tagBio2Bytecode::tagEndif) },				// Endif
	{ sizeof(tagBio2Bytecode::tagSleep) },				// Sleep
	{ sizeof(tagBio2Bytecode::tagSleeping) },			// Sleeping
	{ sizeof(tagBio2Bytecode::tagWsleep) },				// Wsleep
	{ sizeof(tagBio2Bytecode::tagWsleeping) },			// Wsleeping
	{ sizeof(tagBio2Bytecode::tagFor) },				// For
	{ sizeof(tagBio2Bytecode::tagNext) },				// Next
	{ sizeof(tagBio2Bytecode::tagWhile) },				// While
	{ sizeof(tagBio2Bytecode::tagEwhile) },				// Ewhile
	{ sizeof(tagBio2Bytecode::tagDo) },					// Do
	{ sizeof(tagBio2Bytecode::tagEdwhile) },			// Edwhile
	{ sizeof(tagBio2Bytecode::tagSwitch) },				// Switch
	{ sizeof(tagBio2Bytecode::tagCase) },				// Case
	{ sizeof(tagBio2Bytecode::tagDefault) },			// Default
	{ sizeof(tagBio2Bytecode::tagEswitch) },			// Eswitch
	{ sizeof(tagBio2Bytecode::tagGoto) },				// Goto
	{ sizeof(tagBio2Bytecode::tagGosub) },				// Gosub
	{ sizeof(tagBio2Bytecode::tagReturn) },				// Return
	{ sizeof(tagBio2Bytecode::tagBreak) },				// Break
	{ sizeof(tagBio2Bytecode::tagFor2) },				// For2
	{ sizeof(tagBio2Bytecode::tagBreak_point) },		// Break_point
	{ sizeof(tagBio2Bytecode::tagWork_copy) },			// Work_copy
	{ sizeof(tagBio2Bytecode::tagOpcode1E) },			// Nop
	{ sizeof(tagBio2Bytecode::tagOpcode1F) },			// Nop
	{ sizeof(tagBio2Bytecode::tagOpcode20) },			// Nop
	{ sizeof(tagBio2Bytecode::tagCk) },					// Ck
	{ sizeof(tagBio2Bytecode::tagSet) },				// Set
	{ sizeof(tagBio2Bytecode::tagCmp) },				// Cmp
	{ sizeof(tagBio2Bytecode::tagSave) },				// Save
	{ sizeof(tagBio2Bytecode::tagCopy) },				// Copy
	{ sizeof(tagBio2Bytecode::tagCalc) },				// Calc
	{ sizeof(tagBio2Bytecode::tagCalc2) },				// Calc2
	{ sizeof(tagBio2Bytecode::tagSce_rnd) },			// Sce_rnd
	{ sizeof(tagBio2Bytecode::tagCut_chg) },			// Cut_chg
	{ sizeof(tagBio2Bytecode::tagCut_old) },			// Cut_old
	{ sizeof(tagBio2Bytecode::tagMessage_on) },			// Message_on
	{ sizeof(tagBio2Bytecode::tagAot_set) },			// Aot_set
	{ sizeof(tagBio2Bytecode::tagObj_model_set) },		// Obj_model_set
	{ sizeof(tagBio2Bytecode::tagWork_set) },			// Work_set
	{ sizeof(tagBio2Bytecode::tagSpeed_set) },			// Speed_set
	{ sizeof(tagBio2Bytecode::tagAdd_speed) },			// Add_speed
	{ sizeof(tagBio2Bytecode::tagAdd_aspeed) },			// Add_aspeed
	{ sizeof(tagBio2Bytecode::tagPos_set) },			// Pos_set
	{ sizeof(tagBio2Bytecode::tagDir_set) },			// Dir_set
	{ sizeof(tagBio2Bytecode::tagMember_set) },			// Member_set
	{ sizeof(tagBio2Bytecode::tagMember_set2) },		// Member_set2
	{ sizeof(tagBio2Bytecode::tagSe_on) },				// Se_on
	{ sizeof(tagBio2Bytecode::tagSca_id_set) },			// Sca_id_set
	{ sizeof(tagBio2Bytecode::tagFlr_set) },			// Flr_set
	{ sizeof(tagBio2Bytecode::tagDir_ck) },				// Dir_ck
	{ sizeof(tagBio2Bytecode::tagSce_espr_on) },		// Sce_espr_on
	{ sizeof(tagBio2Bytecode::tagDoor_aot_set) },		// Door_aot_set
	{ sizeof(tagBio2Bytecode::tagCut_auto) },			// Cut_auto
	{ sizeof(tagBio2Bytecode::tagMember_copy) },		// Member_copy
	{ sizeof(tagBio2Bytecode::tagMember_cmp) },			// Member_cmp
	{ sizeof(tagBio2Bytecode::tagPlc_motion) },			// Plc_motion
	{ sizeof(tagBio2Bytecode::tagPlc_dest) },			// Plc_dest
	{ sizeof(tagBio2Bytecode::tagPlc_neck) },			// Plc_neck
	{ sizeof(tagBio2Bytecode::tagPlc_ret) },			// Plc_ret
	{ sizeof(tagBio2Bytecode::tagPlc_flg) },			// Plc_flg
	{ sizeof(tagBio2Bytecode::tagSce_em_set) },			// Sce_em_set
	{ sizeof(tagBio2Bytecode::tagCol_chg_set) },		// Col_chg_set
	{ sizeof(tagBio2Bytecode::tagAot_reset) },			// Aot_reset
	{ sizeof(tagBio2Bytecode::tagAot_on) },				// Aot_on
	{ sizeof(tagBio2Bytecode::tagSuper_set) },			// Super_set
	{ sizeof(tagBio2Bytecode::tagSuper_reset) },		// Super_reset
	{ sizeof(tagBio2Bytecode::tagPlc_gun) },			// Plc_gun
	{ sizeof(tagBio2Bytecode::tagCut_replace) },		// Cut_replace
	{ sizeof(tagBio2Bytecode::tagSce_espr_kill) },		// Sce_espr_kill
	{ sizeof(tagBio2Bytecode::tagDoor_model_set) },		// Door_model_set
	{ sizeof(tagBio2Bytecode::tagItem_aot_set) },		// Item_aot_set
	{ sizeof(tagBio2Bytecode::tagSce_key_ck) },			// Sce_key_ck
	{ sizeof(tagBio2Bytecode::tagSce_trg_ck) },			// Sce_trg_ck
	{ sizeof(tagBio2Bytecode::tagSce_bgm_control) },	// Sce_bgm_control
	{ sizeof(tagBio2Bytecode::tagSce_espr_control) },	// Sce_espr_control
	{ sizeof(tagBio2Bytecode::tagSce_fade_set) },		// Sce_fade_set
	{ sizeof(tagBio2Bytecode::tagSce_espr3d_on) },		// Sce_espr3d_on
	{ sizeof(tagBio2Bytecode::tagMember_calc) },		// Member_calc
	{ sizeof(tagBio2Bytecode::tagMember_calc2) },		// Member_calc2
	{ sizeof(tagBio2Bytecode::tagSce_bgmtbl_set) },		// Sce_bgmtbl_set
	{ sizeof(tagBio2Bytecode::tagPlc_rot) },			// Plc_rot
	{ sizeof(tagBio2Bytecode::tagXa_on) },				// Xa_on
	{ sizeof(tagBio2Bytecode::tagWeapon_chg) },			// Weapon_chg
	{ sizeof(tagBio2Bytecode::tagPlc_cnt) },			// Plc_cnt
	{ sizeof(tagBio2Bytecode::tagSce_shake_on) },		// Sce_shake_on
	{ sizeof(tagBio2Bytecode::tagMizu_div_set) },		// Mizu_div_set
	{ sizeof(tagBio2Bytecode::tagKeep_Item_ck) },		// Keep_Item_ck
	{ sizeof(tagBio2Bytecode::tagXa_vol) },				// Xa_vol
	{ sizeof(tagBio2Bytecode::tagKage_set) },			// Kage_set
	{ sizeof(tagBio2Bytecode::tagCut_be_set) },			// Cut_be_set
	{ sizeof(tagBio2Bytecode::tagSce_Item_lost) },		// Sce_Item_lost
	{ sizeof(tagBio2Bytecode::tagPlc_gun_eff) },		// Plc_gun_eff
	{ sizeof(tagBio2Bytecode::tagSce_espr_on2) },		// Sce_espr_on2
	{ sizeof(tagBio2Bytecode::tagSce_espr_kill2) },		// Sce_espr_kill2
	{ sizeof(tagBio2Bytecode::tagPlc_stop) },			// Plc_stop
	{ sizeof(tagBio2Bytecode::tagAot_set_4p) },			// Aot_set_4p
	{ sizeof(tagBio2Bytecode::tagDoor_aot_set_4p) },	// Door_aot_set_4p
	{ sizeof(tagBio2Bytecode::tagItem_aot_set_4p) },	// Item_aot_set_4p
	{ sizeof(tagBio2Bytecode::tagLight_pos_set) },		// Light_pos_set
	{ sizeof(tagBio2Bytecode::tagLight_kido_set) },		// Light_kido_set
	{ sizeof(tagBio2Bytecode::tagRbj_reset) },			// Rbj_reset
	{ sizeof(tagBio2Bytecode::tagSce_scr_move) },		// Sce_scr_move
	{ sizeof(tagBio2Bytecode::tagParts_set) },			// Parts_set
	{ sizeof(tagBio2Bytecode::tagMovie_on) },			// Movie_on
	{ sizeof(tagBio2Bytecode::tagSplc_ret) },			// Splc_ret
	{ sizeof(tagBio2Bytecode::tagSplc_sce) },			// Splc_sce
	{ sizeof(tagBio2Bytecode::tagSuper_on) },			// Super_on
	{ sizeof(tagBio2Bytecode::tagMirror_set) },			// Mirror_set
	{ sizeof(tagBio2Bytecode::tagSce_fade_adjust) },	// Sce_fade_adjust
	{ sizeof(tagBio2Bytecode::tagSce_espr3d_on2) },		// Sce_espr3d_on2
	{ sizeof(tagBio2Bytecode::tagSce_Item_get) },		// Sce_Item_get
	{ sizeof(tagBio2Bytecode::tagSce_line_start) },		// Sce_line_start
	{ sizeof(tagBio2Bytecode::tagSce_line_main) },		// Sce_line_main
	{ sizeof(tagBio2Bytecode::tagSce_line_end) },		// Sce_line_end
	{ sizeof(tagBio2Bytecode::tagSce_parts_bomb) },		// Sce_parts_bomb
	{ sizeof(tagBio2Bytecode::tagSce_parts_down) },		// Sce_parts_down
	{ sizeof(tagBio2Bytecode::tagLight_color_set) },	// Light_color_set
	{ sizeof(tagBio2Bytecode::tagLight_pos_set2) },		// Light_pos_set2
	{ sizeof(tagBio2Bytecode::tagLight_kido_set2) },	// Light_kido_set2
	{ sizeof(tagBio2Bytecode::tagLight_color_set2) },	// Light_color_set2
	{ sizeof(tagBio2Bytecode::tagSe_vol) },				// Se_vol
	{ sizeof(tagBio2Bytecode::tagSce_Item_cmp) },		// Keep_Item_ck2
	{ sizeof(tagBio2Bytecode::tagSce_espr_task) },		// Sce_espr_task
	{ sizeof(tagBio2Bytecode::tagPlc_heal) },			// Plc_heal
	{ sizeof(tagBio2Bytecode::tagSt_map_hint) },		// St_map_hint
	{ sizeof(tagBio2Bytecode::tagSce_em_pos_ck) },		// Sce_em_pos_ck
	{ sizeof(tagBio2Bytecode::tagPoison_ck) },			// Poison_ck
	{ sizeof(tagBio2Bytecode::tagPoison_clr) },			// Poison_clr
	{ sizeof(tagBio2Bytecode::tagSce_Item_lost2) },		// Sce_Item_lost2
	{ sizeof(tagBio2Bytecode::tagEvt_next2) },			// Evt_next2
	{ sizeof(tagBio2Bytecode::tagVib_set0) },			// Vib_set0
	{ sizeof(tagBio2Bytecode::tagVib_set1) },			// Vib_set1
	{ sizeof(tagBio2Bytecode::tagVib_fade_set) },		// Vib_fade_set	
	{ sizeof(tagBio2Bytecode::tagItem_aot_set2) },		// Item_aot_set2
	{ sizeof(tagBio2Bytecode::tagSce_em_set2) }			// Sce_em_set2
};